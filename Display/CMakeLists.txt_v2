cmake_minimum_required(VERSION 3.12)
project(FaserCalDisplay)

# Set the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED YES)
set(CMAKE_CXX_EXTENSIONS NO)

# Find ROOT package
list(APPEND CMAKE_PREFIX_PATH $ENV{ROOTSYS})
find_package(ROOT REQUIRED COMPONENTS Eve EG Geom Gpad RGL Rint Gui GuiHtml Thread Gdml)

# Include ROOT directories
include(${ROOT_USE_FILE})
include_directories(${ROOT_INCLUDE_DIRS})

# Include GenFit directories
set(GENFITINCDIR /data/sw/FASERCAL/FASER/GenFit-install/include)
include_directories(${GENFITINCDIR})
set(GENFITLIBDIR /data/sw/FASERCAL/FASER/GenFit-install/lib)

# Define the source files
set(SOURCES
    FaserCalDisplay.cxx
    main.cxx
    ../CoreUtils/TPOEvent.cc
    ../CoreUtils/TPORecoEvent.cc
    ../CoreUtils/TcalEvent.cc
    ../CoreUtils/TTKTrack.cc
    ../CoreUtils/TPSCluster.cc
    ../CoreUtils/DBScan.cc
    ../CoreUtils/TPSTrack.cc
)

# Generate dictionary
root_generate_dictionary(G__FaserCalDisplay FaserCalDisplay.h LINKDEF disp_linkdef.h)

# Add executable
add_executable(FaserCalDisplay ${SOURCES} G__FaserCalDisplay.cxx)

# Include directories
target_include_directories(FaserCalDisplay PRIVATE ${ROOT_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR} ../CoreUtils ${GENFITINCDIR})

# Link directories
target_link_directories(FaserCalDisplay PRIVATE ${GENFITLIBDIR})

# Link libraries
find_library(GENFIT_LIB libgenfit2.so PATHS ${GENFITLIBDIR})
target_link_libraries(FaserCalDisplay ${ROOT_LIBRARIES} ${GENFIT_LIB})

# Add RPATH for runtime library discovery
set(CMAKE_INSTALL_RPATH "${ROOT_LIBRARY_DIR};${GENFITLIBDIR};$ENV{ROOTSYS}/lib")
set(CMAKE_BUILD_RPATH "${ROOT_LIBRARY_DIR};${GENFITLIBDIR};$ENV{ROOTSYS}/lib")
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

# Debug output
message(STATUS "ROOT Library Directory: ${ROOT_LIBRARY_DIR}")
message(STATUS "GenFit Library Directory: ${GENFITLIBDIR}")
